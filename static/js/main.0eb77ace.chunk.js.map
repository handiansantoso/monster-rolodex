{"version":3,"sources":["components/card.component.jsx","components/card-list.component.jsx","components/search.compenent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","e","i","SearchBox","placeholder","setSearchText","type","onChange","target","value","App","useState","setMonsters","searchText","useEffect","fetch","then","resp","json","users","filtered","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFbC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACC,EAAGC,GACnB,OAAO,cAAC,EAAD,CAAiBR,QAASO,GAAfA,EAAEN,UCPvBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,OACrB,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAU,SAACN,GAAD,OAAOI,EAAcJ,EAAEO,OAAOC,YCqB/FC,MAnBf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNZ,EADM,KACIa,EADJ,OAEuBD,mBAAS,IAFhC,mBAENE,EAFM,KAEMR,EAFN,KAGbS,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAIP,EAAYO,QAC5B,IACH,IAAMC,EAAWrB,EAASsB,QAAO,SAAApB,GAAC,OAAIA,EAAEL,KAAK0B,cAAcC,SAASV,MACpE,OACE,sBAAKtB,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWa,YAAY,iBAAiBC,cAAeA,IACvD,cAAC,EAAD,CAAUN,SAAUqB,EAAUP,WAAYA,QCLjCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0eb77ace.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from './card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {\r\n            props.monsters.map((e, i) => {\r\n                return <Card key={e.id} monster={e}></Card>;\r\n            })\r\n        }\r\n    </div>\r\n);\r\n","import './search.style.css';\r\nexport const SearchBox = ({ placeholder, setSearchText }) => (\r\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={(e) => setSearchText(e.target.value)}></input>\r\n);","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { CardList } from './components/card-list.component';\nimport { SearchBox } from './components/search.compenent';\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(resp => resp.json())\n      .then(users => setMonsters(users));\n  }, []);\n  const filtered = monsters.filter(e => e.name.toLowerCase().includes(searchText));\n  return (\n    <div className=\"App\" >\n      <h1> Monsters Rolodex </h1>\n      <SearchBox placeholder=\"search monster\" setSearchText={setSearchText}></SearchBox>\n      <CardList monsters={filtered} searchText={searchText}>\n      </CardList>\n    </div >\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}